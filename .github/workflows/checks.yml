name: "Checks"
on: [pull_request]

jobs:
  preflight:
    runs-on: ubuntu-latest
    name: Preflight
    outputs:
      repository: ${{ steps.repository.outputs.repository }}
      category:  ${{ steps.category.outputs.category }}
      check: ${{ steps.check.outputs.check }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Clone origin
        run: git clone --depth 1 https://github.com/hacs/default /tmp/repositories/default

      - name: Clone new addition
        run: |
          repo=$(python3 -m scripts.changed.repo)
          git clone --depth 1 "https://github.com/$repo" /tmp/repositories/addition

      - name: Set category
        id: category
        run: echo "::set-output name=category::$(python3 -m scripts.changed.category)"

      - name: Set repository
        id: repository
        run: echo "::set-output name=repository::$(python3 -m scripts.changed.repo)"

      - name: Should run?
        id: check
        run: echo "::set-output name=check::$(python3 -m scripts.check.should_run)"

      - name: Upload shared artifacts
        uses: actions/upload-artifact@master
        with:
          name: repositories
          path: /tmp/repositories

  matrix:
    runs-on: ubuntu-latest
    name: ${{ matrix.checks.name }}
    if: needs.preflight.outputs.check == 'True'
    needs: preflight
    strategy:
      matrix:
        checks:
          - {check: "archived", name: "Check Archived", deps: True}
          - {check: "brands", name: "Check Brands", deps: True}
          - {check: "fork", name: "Check Fork", deps: True}
          - {check: "hacs_manifest", name: "Check HACS Manifest"}
          - {check: "images", name: "Check Images"}
          - {check: "info", name: "Check Info"}
          - {check: "manifest", name: "Check Manifest"}
          - {check: "owner", name: "Check Owner", deps: True}
          - {check: "repository", name: "Check Repository", deps: True}
          - {check: "wheels", name: "Check Wheels", deps: True}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download shared artifacts
        uses: actions/download-artifact@master
        with:
          name: repositories
          path: /tmp/repositories

      - name: Install dependencies if needed
        if: matrix.checks.deps
        run: |
          python3 -m pip install setuptools wheel
          python3 -m pip install aiogithubapi

      - name: Run the check
        run: python3 -m scripts.check.${{ matrix.checks.check }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  hassfest:
    runs-on: ubuntu-latest
    name: "Check hassfest"
    needs: preflight
    if: needs.preflight.outputs.check == 'True' && needs.preflight.outputs.category == 'integration'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download shared artifacts
        uses: actions/download-artifact@v1
        with:
          name: repositories
          path: /tmp/repositories

      - name: Pull Home Assistant Container
        run: docker pull homeassistant/home-assistant:beta

      - name: Run hassfest
        run: |
          integration=$(python3 -m scripts.helpers.integration_path)
          domain=$(python3 -m scripts.helpers.domain)
          docker run --entrypoint=""  -v "$integration":"/$domain" \
            homeassistant/home-assistant:beta python3 -m \
            script.hassfest --action validate --integration-path "/$domain"

  hacs:
    runs-on: ubuntu-latest
    name: "Check HACS"
    needs: preflight
    if: needs.preflight.outputs.check == 'True'
    steps:
      - name: HACS validation
        uses: "hacs/integration/action@master"
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        env:
          REPOSITORY: ${{needs.preflight.outputs.repository}}
          CATEGORY: ${{needs.preflight.outputs.category}}